# demo config for generic "hypot" experiment
[global]
#
# This section has variables we use later in the file as %(name)s
#
group      = hypot
experiment = hypot
wrapper = file:///${FIFE_UTILS_DIR}/libexec/fife_wrap
version = v_override_me  # override on command line with proper sw. version
quals   = override_me    # override on command line with proper qualifiers
basename= stage_override # overridden in --stage sections (below)
sam_dataset = override_me# usually overridden on command line with poms
fclfile = standard_%(basename)s_%(experiment)s.fcl
                         # overridden in --stage sections (below) or on cmd line
streamname = only        # for merge passes, override on command line

[env_pass]
#
# these become -e parameters to jobsub_submit
#
IFDH_DEBUG = 1
SAM_EXPERIMENT=%(experiment)s
SAM_GROUP=%(group)s
SAM_STATION=%(experiment)s

[submit]
#
# these become options to jobsub_submit
#
G          = %(group)s
N          = 5
#dataset     =
resource-provides      = usage_model=OPPORTUNISTIC,DEDICATED,OFFSITE
generate-email-summary = True
expected-lifetime      = 3h
timeout                      = 2h
OS                     = sl6
#disk                  = 10GB
memory                 = 2000MB

[job_setup]
#
# these are options to fife_wrap about setting up the job environment,
# and main execution loop
#
debug       = True
find_setups = True
source_1    = /cvmfs/%(experiment)s.opensciencegrid.org/products/%(experiment)s/setup_%(experiment)s.sh
setup_1     = %(experiment)scode %(version)s -q %(quals)s
multifile   = True
#getconfig   = False
#ifdh_art    = False

[sam_consumer]
#
# parameters to SAM / ifdh establishProcess
#
limit       = 1
appvers        = %(version)s
schema      = gsiftp

[executable]
#
# parameters to main executable in job
#
name       = lar
arg_1      = -c
arg_2      = %(fclfile)s
arg_3      = -o
arg_4      = %(basename)s.root
arg_5      = -T 
arg_6      = hist_%(basename)s.root
arg_7      = -s 
#arg_8      = input_filename -- will be added by multifile loop...

[job_output]
#
# parameters to output handling section of fife_wrap
#
addoutput   = *%(basename)s.root
rename      = unique
dest        = /pnfs/%(experiment)s/scratch/%(experiment)spro/poms_test/
declare_metadata = True
metadata_extractor=sam_metadata_dumper
add_location=True          

#
# now we have overides for each processing stage/job type 
#
# you may need to change the global.fclfile overrides for each
# stage to reflect your experiment's naming convention for .fcl files
#
[stage_gen]
# fake output dataset for POMS
job_output.add_to_dataset = _poms_task
job_output.dataset_exclude = hist*
# turn off -s flag
executable.arg_7 = 
global.fclfile = standard_genie_%(experiment)s.fcl
global.basename=gen
job_setup.multifile = False

[stage_g4]
global.basename  = g4
submit.dataset   = %(sam_dataset)s
# # if g4 only works onsite 
# submit.resource-provides= usage_model=OPPORTUNISTIC,DEDICATED
#
# # ...with extra cvmfs libraries:
# job_setup.prescript     = export LD_LIBRARY_PATH=/cvmfs/nova.opensciencegrid.org/externals/library_shim/v03.03/NULL/lib/sl6:$LD_LIBRARY_PATH

[stage_detsim]
global.basename = detsim
submit.dataset  = %(sam_dataset)s

[stage_reco]
global.basename = reco
global.fclfile  = standard_reco_%(experiment)s_basic.fcl
submit.dataset  = %(sam_dataset)s

[stage_anatree]
global.basename = anatree
submit.dataset  = %(sam_dataset)s

[stage_split]
global.basename = split
arg_3           =
arg_4           =
submit.dataset  = %(sam_dataset)s

[stage_merge]
global.basename = merge_%(streamname)s
submit.dataset  = %(sam_dataset)s
