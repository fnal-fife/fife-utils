#!/usr/bin/env python3


import optparse
from fife_sam_utils import *
from samweb_client import *
import logging
import sys
import os
import grp
import re
import traceback


def retire(
    d,
    just_say=False,
    keep_files=False,
    delete_match=".*",
    experiment="",
    admin=False,
    verbose=0,
):
    samweb = SAMWebClient(experiment=experiment)

    if admin:
        samweb.set_role("*")

    for full in d.fullpath_iterator():
        file = basename(full)
        if just_say:
            if not keep_files:
                if re.match(delete_match, full):
                    print("I would 'ifdh rm %s'" % full)
            print(
                "I would remove location %s for %s"
                % (file, samprefix(full) + dirname(full))
            )
        else:
            if not keep_files:
                try:
                    if re.match(delete_match, full):
                        logging.info("removing: %s ", full)
                        d.ifdh_handle.rm(full, "")
                except:
                    logging.exception("unable to remove %s", full)
                    pass
            logging.info("removing location: %s%s", samprefix(full), full)
            try:
                samweb.removeFileLocation(file, samprefix(full) + dirname(full))
            except:
                traceback.print_exc()

    for file in d.file_iterator():
        if just_say:
            print("I would retire file: %s" % file)
        else:
            try:
                logging.info("retiring file %s", file)
                samweb.retireFile(file)
            except:
                print("Ouch! retriring %s" % file)
                pass

    if just_say:
        print("I would deleteDefinition( %s ) " % d.name)
    else:
        logging.info("deleting definition: %s", d.name)
        samweb.deleteDefinition(d.name)


if __name__ == "__main__":

    log_startup()

    experiment = os.environ.get(
        "EXPERIMENT", os.environ.get("SAM_EXPERIMENT", safe_getgrgid(os.getgid())[0])
    )

    parser = optparse.OptionParser(
        usage="usage: %prog [options] dataset [dataset ...]\n delete files, undeclare locations, and delete dataset"
    )
    parser.add_option("-v", "--verbose", action="count", default=0)
    parser.add_option(
        "-j",
        "--just_say",
        action="store_true",
        help="do not actually retire dataset, just say what you would do",
    )
    parser.add_option(
        "-k",
        "--keep_files",
        action="store_true",
        help="do not delete actual files, just retire them from SAM",
    )
    parser.add_option(
        "-m",
        "--delete_match",
        help="delete only files matching this regexp",
        default=".*",
    )
    parser.add_option(
        "-e",
        "--experiment",
        default=experiment,
        help="use this experiment server defaults to $SAM_EXPERIMENT if not set",
    )
    parser.add_option("-n", "--name", help="dataset name to retire")
    parser.add_option(
        "-A",
        "--admin",
        action="store_true",
        help="use admin priveleges, i.e to delete someone elses dataset",
        default=False,
    )

    (o, a) = parser.parse_args()

    if o.verbose > 1:
        logging.basicConfig(level=logging.DEBUG)
    elif o.verbose > 0:
        logging.basicConfig(level=logging.INFO)
    else:
        logging.disable(logging.INFO)

    if o.experiment:
        os.environ["EXPERIMENT"] = o.experiment
        os.environ["SAM_EXPERIMENT"] = o.experiment
        os.environ["IFDH_BASE_URI"] = (
            "http://sam%s.fnal.gov:8480/sam/%s/api" % 
               (o.experiment, o.experiment)
        ).replace("samsamdev","samdev")
    else:
        sys.stderr.write(
            "Error: Need either --experiment or $EXPERIMENT $SAM_EXPERIMENT in environment"
        )
        sys.exit(1)

    cert = get_standard_certificate_path(o)
    os.environ["X509_USER_PROXY"] = cert

    if not o.name:
        parser.error("expected --name dataset-name")
        exit(1)

    retire(
        dataset(o.name),
        just_say=o.just_say,
        keep_files=o.keep_files,
        delete_match=o.delete_match,
        experiment=o.experiment,
        admin=o.admin,
        verbose=o.verbose,
    )

    log_finish("Success")
