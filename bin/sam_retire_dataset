#!/usr/bin/env python

import optparse
from fife_sam_utils import *
from samweb_client import *
import sys
import os
import re

def retire( d, just_say = False, keep_files = False, delete_match = '.*' ):
    samweb = SAMWebClient()

    for full in d.fullpath_iterator():
        file = basename(full)
	if just_say:
	    if not keep_files:
	        if re.match(delete_match, full): 
	            print "I would 'ifdh rm %s'" % full
	    print "I would remove location %s for %s" % ( file, samprefix(full)+dirname(full) )
	else:
	    if not keep_files:
		try:
                    if re.match(delete_match, full): 
		        d.ifdh_handle.rm(full, '')
		except:
		    pass
	    samweb.removeFileLocation(file, samprefix(full) + dirname(full))

    for file in d.file_iterator():
        if just_say:
            print "I would retire file: %s" %  file
        else:
            try:
                samweb.retireFile(file)
            except:
                print "Ouch! retriring %s" % file
                pass
    
    if just_say:
         print "I would deleteDefinition( %s ) " % ds.name
    else:
         samweb.deleteDefinition(d.name)



if __name__ == '__main__':
    
    parser = optparse.OptionParser(usage="usage: %prog [options] dataset [dataset ...]\n delete files, undeclare locations, and delete dataset")
    parser.add_option('-v','--verbose',   action='count')
    parser.add_option('-j','--just_say',  action='store_false', help="do not actually copy, just say what you would do")
    parser.add_option('-k','--keep_files',  action='store_false', help="do not delete actual files, just retire them from SAM")
    parser.add_option('-m','--delete_match',   help="delete only files matching this regexp")
    parser.add_option('-e','--experiment')
    parser.add_option('-n', '--name',     help="dataset name to retire", )

    (o,a) = parser.parse_args()

    if o.experiment:
        os.environ['EXPERIMENT']= o.experiment
        os.environ['IFDH_BASE_URI'] = "http://samweb.fnal.gov:8480/sam/%s/api" % o.experiment

    if not o.name:
        parser.error("expected --name dataset-name")
        exit(1)

    retire(dataset(o.name), just_say = o.just_say, keep_files = o.keep_files, delete_match = o.delete_match)

