#!/usr/bin/env python
import optparse
import grp
import sys
import os
import time
import ifdh
import samweb_client
from fife_sam_utils import dataset, sampath

try:
   import uuid
except:
   class uuid:
       def uuid4():
         return "%s-%s-%s-%s-%s" % (
              hex(int(time.time()))[2:],
              hex(os.getpid())[2:],
              hex(os.getppid())[2:],
              hex(os.getpid())[2:],
              ''.join([hex(int(x))[2:] for x in socket.gethostbyname(socket.gethostname()).split('.')])
            )
       uuid4 = staticmethod(uuid4)


import ifdh
import os.path

class restorer:
    def __init__(self):
         self.fifopath = None

    def __del__(self):
         if self.fifopath:
            os.unlink(self.fifopath)

    def list(self, o):
        print "Archived areas in dataset", o.name, ":"
        print "Date\tsize(k)\tPath"
        for f in d.file_iterator:
            print m
            m = samweb.getMetadata(f)
            print m['create_date'], m['file_size']/1024, m['Archive.source']

     def restore(self, o)
        if not o.restore or not o.date:
            parser.error("either --list or --restore=/some/path and --date=some-date required")

        os.chdir('/')
        for f in d.file_iterator:
            m = samweb.getMetadata(f)
            if m['Archive.source'] == o.restore and m['create_date'] == o.date:
                src = sampath(samweb.locateFile(f)[0]['full_path'])          
                self.fifopath = os.environ.get('TMPDIR','/tmp') + "/fifo_%d" % os.getpid()
                os.mkfifo(fifopath)
                # copy retries and FIFO's dont mix...
                os.environ["IFDH_CP_MAXRETRIES"] = 0
                p1 = subprocess.Popen(["ifdh", "cp",  src, fifopath])
                p2 = subprocess.Popen(["tar", "xzvf", fifopath])
                p2.wait()
                p1.wait()

if __name__ == '__main__':

    parser = optparse.OptionParser(usage="usage: %prog [options] \n restore files from dcache archviver area.\n  (Use %prog --help for full options list)")
    experiment = os.environ.get('EXPERIMENT',os.environ.get('SAM_EXPERIMENT',grp.getgrgid(os.getgid())[0]))
    default_dataset = dname + '_archive_images' 
    datedir = time.strftime("%Y/%m-%d")
    parser.add_option('-v','--verbose',   action='count')
    parser.add_option('-j','--just_say',  action='store_true', help="do not actually copy, just say what you would do")
    parser.add_option('-e','--experiment', default = experiment)
    parser.add_option('-n', '--name',     default= default_dataset, help="dataset name/tag to put in: default is %s" % default_dataset, )
    parser.add_option('-l', '--list',      help="list available archived directories", action="store_true")
    parser.add_option('-r', '--restore',   help="directory to restore")
    parser.add_option('-d', '--date',      help="date of image to restore")

    (o,a) = parser.parse_args()

    if o.experiment:
        print "seting experiment to: " , o.experiment
        os.environ['EXPERIMENT']= o.experiment
        os.environ['SAM_EXPERIMENT']= o.experiment
        os.environ['IFDH_BASE_URI'] = "http://samweb.fnal.gov:8480/sam/%s/api" % o.experiment

    samweb = samweb_client.SAMWebClient(experiment = experiment)

    d = dataset(o.name)
    r = restorer()
    if o.list:
        r.list(o)
    else:
        r.restore(o)

