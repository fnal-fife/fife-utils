#!/usr/bin/env python

try:
    from six import *
except:
    pass

import sys
import os
import grp
import logging
import socket
import optparse

from fife_sam_utils import *
from samweb_client import *


def extract_dataset_metadata(
    d, extractor, just_say=False, verbose=False, experiment=None
):
    samweb = SAMWebClient()

    logging.debug("starting extract_dataset_metadata")

    if experiment:
        samweb.experiment = experiment
        os.environ["EXPERIMENT"] = experiment

    didthat = set()
    for p in d.fullpath_iterator():
        logging.debug("file path %s" % p)
        sp = sampath(p)
        f = os.path.basename(p)

        if f in didthat:
            continue
        didthat.add(f)

        if just_say:
            print("I would fetchInput('%s') " % (sp))
            print("I would run %s on the result" % extractor)
            print("I would modifyFileMetadata on %s with that result" % f)
        else:
            logging.debug("doing fetchinput on %s" % (sp))
            lf = d.ifdh_handle.fetchInput("%s" % (sp))

            mdf = os.popen("%s %s" % (extractor, lf), "r")
            md = json.loads(mdf.read())
            for k in ["parents", "create_date", "update_date", "file_name"]:
                if k in md:
                    del md[k]
            mdf.close()
            logging.debug("got metadata: %s" % repr(md))
            mdf = StringIO(json.dumps(md))
            samweb.modifyFileMetadata(f, mdfile=mdf)
            mdf.close()
            os.unlink(lf)


if __name__ == "__main__":

    log_startup()

    experiment = os.environ.get(
        "EXPERIMENT", os.environ.get("SAM_EXPERIMENT", grp.getgrgid(os.getgid())[0])
    )

    parser = optparse.OptionParser(
        usage="usage: %prog [options] \n modify metadata on all files in dataset"
    )
    parser.add_option("-v", "--verbose", action="count", default=0)
    parser.add_option(
        "-j",
        "--just_say",
        action="store_true",
        help="do not actually copy, just say what you would do",
    )
    parser.add_option(
        "-e",
        "--experiment",
        default=experiment,
        help="use this experiment server defaults to $SAM_EXPERIMENT if not set",
    )
    parser.add_option("-n", "--name", help="dataset name to modify")
    parser.add_option(
        "--extractor",
        help="program to extract metadata",
        default="sam_metadata_extractor",
    )

    (o, a) = parser.parse_args()

    if o.verbose > 1:
        logging.basicConfig(level=logging.DEBUG)
    elif o.verbose > 0:
        logging.basicConfig(level=logging.INFO)
    else:
        logging.disable(logging.INFO)

    if o.experiment:
        os.environ["EXPERIMENT"] = o.experiment
        os.environ["SAM_EXPERIMENT"] = o.experiment
        os.environ["IFDH_BASE_URI"] = (
            "http://samweb.fnal.gov:8480/sam/%s/api" % o.experiment
        )
    else:
        sys.stderr.write(
            "Error: Need either --experiment or $EXPERIMENT $SAM_EXPERIMENT in environment"
        )
        sys.exit(1)

    cert = get_standard_certificate_path(o)
    os.environ["X509_USER_PROXY"] = cert

    if not o.name:
        parser.error("expected --name dataset-name")
        exit(1)

    logging.debug("here")
    extract_dataset_metadata(
        dataset(o.name),
        o.extractor,
        just_say=o.just_say,
        verbose=o.verbose,
        experiment=o.experiment,
    )

    log_finish("Success")
