#!/bin/sh

ncopies=1
experiment=${EXPERIMENT:-${SAM_EXPERIMENT:-samdev}}
intermed=false
verbose=false
hashes=false
help() {
 cat <<EOF
   ifdh_batch_copy [flags] --src=path --dest=path
     flags:
       -e EXPERIMENT|--experiment=EXPERIMENT
            set experiment
       --intermed      
            use a local intermediate file
       --hashes
            make hash directories at destination
       -N|--ncopies    
   	    keep ncopies copy programs running in parallel
       -v|--verbose    
            be more loquatious
       -j|--justsay
            just say what you would do but do not do it 
EOF
}

while [ $# -gt 0 ]
do
   case "x$1" in
   x-j)            justsay=ture; shift;;
   x--justsay)     justsay=ture; shift;;
   x--intermed)    intermed=true; shift;;
   x--hashes)      hashes=true; shift;;
   x-v)            verbose=true; shift;;
   x--verbose)     verbose=true; shift;;
   x-N)            ncopies=$2; shift; shift;;
   x--ncopies)     ncopies=$2; shift; shift;;
   x--ncopies=*)   ncopies=`echo $1| sed -e 's/--ncopies=//'`; shift;;
   x--src)         src=$2; shift; shift;;
   x--src=*)       src=`echo $1| sed -e 's/--src=//'`; shift;;
   x--dest)        dest=$2; shift; shift;;
   x--dest=*)      dest=`echo $1| sed -e 's/--dest=//'`; shift;;
   x-e)            experiment=$2; shift; shift;;
   x--experiment)  experiment=$2; shift; shift;;
   x--experiment=*)experiment=`echo $1| sed -e 's/--experiment=//'`; shift;;
   *)  echo "unrecognized parameter: $1"; help; exit; shift;;
   esac
done

workdir="${TMPDIR:-/var/tmp}/ifdh_batch_copy_$$"
mkdir -p "$workdir"

ifdh ls "$dest" 10 | grep -v '/$' | xargs -n 1  basename >  "$workdir/have_files"

$verbose && echo "already there: "
$verbose && cat $workdir/have_files


ifdh ls "$src" 10 | (
  bgcount=1
  while read srcfile 
  do
      case $srcfile in
      */) continue;;
      esac

      if echo $srcfile | fgrep -f "$workdir/have_files" > /dev/null
      then
          continue
      fi
      bfile=`basename $srcfile`
      ifile="$workdir/$bfile"
      if $hashes
      then
         hash="$(printf "%s" "$bfile" | md5sum | cut -c 1-3|sed -e 's;.;&/;g')"
      else
         hash=""
      fi
      $verbose && echo "Starting copy of $bfile..."
      if $intermed
      then 
          if $justsay
          then
              echo "(ifdh mkdir_p $dest/$hash 2>/dev/null; ifdh cp \"$srcfile\" \"$ifile\" \";\" \"$ifile\" \"$dest/$hash/$bfile\"; rm \"$ifile\") " &
          else
              (ifdh mkdir_p $dest/$hash 2>/dev/null; ifdh cp "$srcfile" "$ifile" ";" "$ifile" "$dest/$hash$bfile"; rm "$ifile") &
          fi
      else
          if $justsay
          then
             echo "(ifdh mkdir_p $dest/$hash 2>/dev/null; ifdh cp \"$srcfile\" \"$dest/$hash$bfile\")" &
          else
             (ifdh mkdir_p $dest/$hash 2>/dev/null; ifdh cp "$srcfile" "$dest/$hash$bfile") &
          fi
      fi
      if ((bgcount++ > ncopies))
      then
         wait
         ((bgcount--))
         $verbose && echo "Completed."
      fi
  done
  while ((bgcount > 0))
  do
     wait
     ((bgcount--))
     $verbose && echo "Completed."
  done
)
