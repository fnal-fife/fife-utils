#!/usr/bin/env python
import optparse
import grp
import sys
import os

import ifdh
import os.path
from fife_sam_utils import clone, fourdeep, unclone, dataset

def check_dest(dest, default_dest):
    destp = os.path.dirname(dest)

    h = ifdh.ifdh()
    for d in [ destp , dest]:
	res = h.ls(d, 1, "")
	if len(res) == 0:
            try:
	        h.mkdir(d,"")
            except:
                pass
	res = h.ls(d, 1, "")
	if len(res) == 0:
            if default_dest == dest:
                if dest.find("none") > 0:
                    
	            sys.stderr.write("\nERROR: no destination specified to " + sys.argv[0])
                else:
	            sys.stderr.write("\nERROR: Cannot find or create %s:\n-- please contect servicedesk to request it be made" % d)
            else:
	        sys.stderr.write("\nERROR: Cannot find or create %s:\n-- please check spelling, permissions, etc" % d)
            
            exit(1)

if __name__ == '__main__':

    print "checking argv[0] -> %s" % sys.argv[0]

    if sys.argv[0].find("persistent") > 0:
         type= "persistent"
         sdir = ""
         clean_others= True
    elif sys.argv[0].find("scratch") > 0:
         type= "scratch"
         sdir = ""
         clean_others= False
    elif sys.argv[0].find("archive") > 0:
         type= "archive"
         sdir = "/data"
         clean_others= True
    else:
         # plain sam_move_dataset
         type = "none"
         clean_others= True

    print "type is %s" % type
         
    parser = optparse.OptionParser(usage="usage: %prog [options] \n copy files in named dataset to scratch and declare.\n  (Use %prog --help for full options list)")
    experiment = os.environ.get('EXPERIMENT',os.environ.get('SAM_EXPERIMENT',grp.getgrgid(os.getgid())[0]))
    dest = "/pnfs/%s/%s/sam_managed_users/%s%s" % ( 
	    experiment, type, os.environ.get('USER',os.environ.get('GRID_USER')), sdir)

    parser.set_defaults(dirfunc = fourdeep, experiment = experiment, dest = dest)
    parser.add_option('-v','--verbose',   action='count')
    parser.add_option('-j','--just_say',  action='store_true', help="do not actually copy, just say what you would do")
    parser.add_option('-e','--experiment')
    parser.add_option('-b','--batch_size',default = 20, type='int', help="copy then declare in batches of this size")
    parser.add_option('-n', '--name',     help="dataset name to copy", )
    parser.add_option('-d', '--dest',     help="override destination to archive to, default is %s" % dest)

    (o,a) = parser.parse_args()

    if o.experiment:
        os.environ['EXPERIMENT']= o.experiment
        os.environ['SAM_EXPERIMENT']= o.experiment
        os.environ['IFDH_BASE_URI'] = "http://samweb.fnal.gov:8480/sam/%s/api" % o.experiment

    if not o.name:
        parser.error("expected --name dataset-name")
        exit(1)

    check_dest(o.dest, dest)
    d = dataset(o.name)
        
    clone(d, o.dest, subdirf = o.dirfunc, just_say = o.just_say, batch_size = o.batch_size, verbose = o.verbose, experiment=o.experiment)

    if clean_others:
        unclone(d, delete_match = '(?!%s)' % o.dest, verbose = o.verbose) 
