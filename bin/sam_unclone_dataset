#!/usr/bin/env python

from fife_sam_utils import *
from samweb_client import *
import sys
import os
import re
import optparse

def unclone( d, just_say = False, delete_match = '.*', verbose = False ):
    samweb = SAMWebClient()

    for full in d.fullpath_iterator():
        file = basename(full)
	if just_say:
	    if re.match(delete_match, full): 
	        print "I would 'ifdh rm %s'" % full
	        print "I would remove location %s for %s" % ( file, samprefix(full)+dirname(full) )
	else:
	    if re.match(delete_match, full): 
                if len(d.ifdh_handle.locateFile(file)) == 1:
                    print "NOT removing %s, it is the only location!"
                    continue
		try:
                    if verbose: print "removing: " , full
                    d.ifdh_handle.rm(full, '')
		except:
		    pass
	        if verbose: print "removing location: " , full
	        samweb.removeFileLocation(file, samprefix(full) + dirname(full))

if __name__ == '__main__':
    
    parser = optparse.OptionParser(usage="usage: %prog [options] dataset dest_url \n remove copies of files in dataset under destination")
    parser.add_option('-v','--verbose',   action='count')
    parser.add_option('-j','--just_say',  action='store_true', help="do not actually copy, just say what you would do")
    parser.add_option('-e','--experiment')
    parser.add_option('-n', '--name',     help="dataset name to clean", )
    parser.add_option('-d', '--dest',     help="destination pattern to match", )

    (o,a) = parser.parse_args()

    if o.experiment:
        os.environ['EXPERIMENT']= o.experiment
        os.environ['IFDH_BASE_URI'] = "http://samweb.fnal.gov:8480/sam/%s/api" % o.experiment

    if not o.name:
        parser.error("expected --name dataset-name")
        exit(1)

    if not o.dest:
        parser.error("expected --dest pattern")
        exit(1)

    unclone(dataset(o.name), just_say = o.just_say, delete_match = o.dest, verbose = o.verbose)

