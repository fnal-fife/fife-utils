#!/usr/bin/env python

from fife_sam_utils import *
from samweb_client import *
import hashlib 
import sys
import os
import re

def unclone( d, just_say = False, delete_match = '.*' ):
    samweb = SAMWebClient()

    for full in d.fullpath_iterator():
        file = basename(full)
	if just_say:
	    if re.match(delete_match, full): 
	        print "I would 'ifdh rm %s'" % full
	        print "I would remove location %s for %s" % ( file, samprefix(full)+dirname(full) )
	else:
	    if re.match(delete_match, full): 
		try:
                    d.ifdh_handle.rm(full, '')
		except:
		    pass
	        samweb.removeFileLocation(file, samprefix(full) + dirname(full))

def usage(argv):
    print argv[0], ": usage: "
    print argv[0], " [options] dataset location-regexp"
    print "	-- remove and undeclare locations matching regexp in dataset(s)"
    print " options: "
    print "   -n     # don't actually do anything, say what would happen"
    print "   -h     # print help message" 

if __name__ == '__main__':
    
    just_say = False
    keep_files = False
    delete_match = ".*"

    cmd = sys.argv[0]

    while len(sys.argv) > 1 and sys.argv[1][0] == "-":

      if sys.argv[1] == "-k":
        keep_files = True
        sys.argv = sys.argv[1:]
        sys.argv[0] = cmd
        continue

      if sys.argv[1] == "-n":
        just_say = True
        sys.argv = sys.argv[1:]
        sys.argv[0] = cmd
        continue

      if sys.argv[1] == '-h':
        usage(sys.argv)
        exit(0)

      print "unknown option %s" % sys.argv[1]
      usage(sys.argv)
      exit(1)

    if len(sys.argv) < 3:
        usage(sys.argv)
        exit(1)

    delete_match = sys.argv[2]
    unclone(dataset(sys.argv[1]), just_say = just_say, delete_match = delete_match)

