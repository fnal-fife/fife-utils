#!/usr/bin/env python
from fife_sam_utils import *
from samweb_client import *
import sys
import os
import re
import optparse
if __name__ == '__main__':
 
    log_startup()   

    experiment = os.environ.get('EXPERIMENT',os.environ.get('SAM_EXPERIMENT',grp.getgrgid(os.getgid())[0]))

    parser = optparse.OptionParser(usage="usage: %prog [options] dataset dest_url \n remove copies of files in dataset under destination")
    parser.add_option('-v','--verbose',   action='count')
    parser.add_option('-j','--just_say',  action='store_true', help="do not actually copy, just say what you would do")
    parser.add_option('-e','--experiment', default=experiment, help='use this experiment server defaults to $SAM_EXPERIMENT if not set')
    parser.add_option('-n', '--name',     help="dataset name to clean", )
    parser.add_option('-d', '--dest',     help="destination pattern to match", )
    parser.add_option('-k', '--keep', action='store_true', default=False,   help="don't actually remove files, just undeclare the location")
    parser.add_option('-N', '--ncopies',  default=1, help="number of copies to run in parallel")

    (o,a) = parser.parse_args()

    if o.experiment:
        os.environ['EXPERIMENT']= o.experiment
        os.environ['SAM_EXPERIMENT']= o.experiment
        os.environ['IFDH_BASE_URI'] = "http://samweb.fnal.gov:8480/sam/%s/api" % o.experiment

    cert = get_standard_certificate_path(o)
    os.environ['X509_USER_PROXY'] = cert

    if not o.name:
        parser.error("expected --name dataset-name")
        exit(1)

    if not o.dest:
        parser.error("expected --dest pattern")
        exit(1)

    o.dest = canonical(o.dest)

    unclone(dataset(o.name), just_say = o.just_say, delete_match = o.dest, verbose = o.verbose, experiment = o.experiment, nparallel = int(o.ncopies), keep = o.keep)

    log_finish("Success")
