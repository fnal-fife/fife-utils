#!/usr/bin/env python

from samweb_client import *
from fife_sam_utils import *
import sys
import os

def validate( ds, just_say = False, prune = False ):
    samweb = SAMWebClient()

    for p in ds.fullpath_iterator():
        if just_say and not prune:
            print "I would: ifdh ls %s 0" % p
        else:
            if len(ds.ifdh_handle.ls(p,0,'')) == 0:
                if prune:
                    if just_say:
                       print "I would remove location: %s for %s " % (samprefix(p)+dirname(p), basename(p))
                    else:
                        samweb.removeLocation(basename(p),  samprefix(p) + dirname(p))
                else:
                    print "file path %s not accessible" % p
          

def usage(argv):
    print argv[0], ": usage: "
    print argv[0], "dataset_name1  dataset_name2 ..."
    print "	-- check that all file locations declared for dataset(s) exist"

if __name__ == '__main__':
    
    cmd = sys.argv[0]
    just_say = False
    prune = False

    while len(sys.argv) > 1 and sys.argv[1][0] == "-":

      if  sys.argv[1] == "-h":
        usage(sys.argv)
        exit(0)

      if  sys.argv[1] == "-n":
        just_say = True
        sys.argv = sys.argv[1:]
        sys.argv[0] = cmd
        continue

      if  sys.argv[1] == "-p":
        prune = True
        sys.argv = sys.argv[1:]
        sys.argv[0] = cmd
        continue

      print "unknown option %s" % sys.argv[1]
      usage(sys.argv)
      exit(1)

    if len(sys.argv) == 1:
        usage(sys.argv)
        exit(1)

    for ds in sys.argv[1:]:
        validate(dataset(ds), just_say = just_say, prune = prune)
