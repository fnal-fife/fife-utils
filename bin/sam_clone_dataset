#!/usr/bin/env python
from fife_sam_utils import *
import sys
import os
from samweb_client import *
import socket
import optparse
import time
import grp


if __name__ == '__main__':

    parser = optparse.OptionParser(usage="usage: %prog [options] \n copy files in named dataset to destination and declare")
    parser.add_option('-v','--verbose',   action='count')
    parser.add_option('-j','--just_say',  action='store_true', help="do not actually copy, just say what you would do")
    parser.add_option('-e','--experiment')
    parser.add_option('-b','--batch_size',default = 20, type='int', help="copy then declare in batches of this size")
    parser.set_defaults(dirfunc = twodeep)
    parser.add_option('-0','--zerodeep',  dest='dirfunc', action='store_const', const=zerodeep, help="make no subdirectories in destination")
    parser.add_option('-1','--onedeep',   dest='dirfunc', action='store_const', const=onedeep, help = "make subdirectories one deep in destination")
    parser.add_option('-2','--twodeep',   dest='dirfunc', action='store_const', const=twodeep, help = "make subdirectories two deep in destination")
    parser.add_option('-3','--threedeep',   dest='dirfunc', action='store_const', const=threedeep, help = "make subdirectories two deep in destination")
    parser.add_option('-4','--fourdeep',   dest='dirfunc', action='store_const', const=fourdeep, help = "make subdirectories two deep in destination")
    parser.add_option('-n', '--name',     help="dataset name to copy", )
    parser.add_option('-d', '--dest',     help="destination for copy", )

    (o,a) = parser.parse_args()

    if not o.experiment:
        o.experiment = os.environ.get('EXPERIMENT',os.environ.get('SAM_EXPERIMENT',grp.getgrgid(os.getgid())[0]))

    if o.experiment:

        os.environ['EXPERIMENT']= o.experiment
        os.environ['SAM_EXPERIMENT']= o.experiment
        os.environ['IFDH_BASE_URI'] = "http://samweb.fnal.gov:8480/sam/%s/api" % o.experiment

    if not o.name:
        parser.error("expected --name dataset-name")
        exit(1)

    if not o.dest:
        parser.error("expected --dest url")
        exit(1)

    o.dest = canonical(o.dest)

    clone(dataset(o.name), o.dest, subdirf = o.dirfunc, just_say = o.just_say, batch_size = o.batch_size, verbose = o.verbose, experiment=o.experiment)
